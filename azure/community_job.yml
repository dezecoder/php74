parameters:
  configurationName: ''
  configurationParameters: ''
  timeoutInMinutes: 60

jobs:
  - job: ${{ parameters.configurationName }}
    timeoutInMinutes: ${{ parameters.timeoutInMinutes }}
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - template: apt.yml
    - script: |
        wget https://curl.haxx.se/download/curl-7.65.3.tar.gz
        tar xzf curl-7.65.3.tar.gz
        cd curl-7.65.3/
        ./configure
        make -j2
        sudo make install
      displayName: 'Build Curl'
    - template: configure.yml
      parameters:
        configurationParameters: ${{ parameters.configurationParameters }}
    - script: make -j$(/usr/bin/nproc) >/dev/null
      displayName: 'Make Build'
    - script: |
        sudo make install
        sudo mkdir     /etc/php.d
        sudo chmod 777 /etc/php.d
        echo mysqli.default_socket=/var/run/mysqld/mysqld.sock     > /etc/php.d/mysqli.ini
        echo pdo_mysql.default_socket=/var/run/mysqld/mysqld.sock  > /etc/php.d/pdo_mysql.ini
        echo zend_extension=opcache.so > /etc/php.d/opcache.ini
        echo opcache.enable_cli=1 >> /etc/php.d/opcache.ini
      displayName: 'Install Build'
    - script: |
        git clone https://github.com/laravel/framework.git --branch=master --depth=1
        cd framework
        php7.3 /usr/bin/composer install --no-progress
        export USE_ZEND_ALLOC=0
        sed -i 's/$exit = true/$exit = false/g' vendor/phpunit/phpunit/src/TextUI/Command.php
        # Avoid test using exit(), which thus leaks.
        # We can use USE_TRACKED_ALLOC=1 if more of these show up.
        sed -i "s/function_exists('pcntl_fork')/false/" tests/Filesystem/FilesystemTest.php
        php vendor/bin/phpunit
      displayName: 'Test Laravel'
    - script: |
        git clone https://github.com/symfony/symfony.git --branch=master --depth=1
        cd symfony
        php7.3 /usr/bin/composer install --no-progress
        export USE_ZEND_ALLOC=0
        export USE_TRACKED_ALLOC=1
        export ASAN_OPTIONS=exitcode=139
        php ./phpunit --debug 0<&-
        status=$?
        if [ $status -gt 128 ]; then
          exit 1
        fi
      displayName: 'Test Symfony'
      condition: or(succeeded(), failed())
    - script: |
        git clone https://github.com/amphp/amp.git --branch=master --depth=1
        cd amp
        php7.3 /usr/bin/composer install --no-progress --ignore-platform-reqs
        export USE_ZEND_ALLOC=0
        sed -i 's/$exit = true/$exit = false/g' vendor/phpunit/phpunit/src/TextUI/Command.php
        php vendor/bin/phpunit
      displayName: 'Test Amphp'
      condition: or(succeeded(), failed())
